#!/bin/sh

#   standard_space_roi - align input image to standard space and
#   output ROI version of input that matches the standard space FOV
#
#   Stephen Smith, FMRIB Image Analysis Group
#
#   Copyright (C) 2005 University of Oxford
#
#   Part of FSL - FMRIB's Software Library
#   http://www.fmrib.ox.ac.uk/fsl
#   fsl@fmrib.ox.ac.uk
#   
#   Developed at FMRIB (Oxford Centre for Functional Magnetic Resonance
#   Imaging of the Brain), Department of Clinical Neurology, Oxford
#   University, Oxford, UK
#   
#   
#   LICENCE
#   
#   FMRIB Software Library, Release 3.3 (c) 2006, The University of
#   Oxford (the "Software")
#   
#   The Software remains the property of the University of Oxford ("the
#   University").
#   
#   The Software is distributed "AS IS" under this Licence solely for
#   non-commercial use in the hope that it will be useful, but in order
#   that the University as a charitable foundation protects its assets for
#   the benefit of its educational and research purposes, the University
#   makes clear that no condition is made or to be implied, nor is any
#   warranty given or to be implied, as to the accuracy of the Software,
#   or that it will be suitable for any particular purpose or for use
#   under any specific conditions. Furthermore, the University disclaims
#   all responsibility for the use which is made of the Software. It
#   further disclaims any liability for the outcomes arising from using
#   the Software.
#   
#   The Licensee agrees to indemnify the University and hold the
#   University harmless from and against any and all claims, damages and
#   liabilities asserted by third parties (including claims for
#   negligence) which arise directly or indirectly from the use of the
#   Software or the sale of any products based on the Software.
#   
#   No part of the Software may be reproduced, modified, transmitted or
#   transferred in any form or by any means, electronic or mechanical,
#   without the express permission of the University. The permission of
#   the University is not required if the said reproduction, modification,
#   transmission or transference is done without financial return, the
#   conditions of this Licence are imposed upon the receiver of the
#   product, and all original and amended source code is included in any
#   transmitted product. You may be held legally responsible for any
#   copyright infringement that is caused or encouraged by your failure to
#   abide by these terms and conditions.
#   
#   You are not permitted under this Licence to use this Software
#   commercially. Use for which any financial return is received shall be
#   defined as commercial use, and includes (1) integration of all or part
#   of the source code or the Software into a product for sale or license
#   by or on behalf of Licensee to third parties or (2) use of the
#   Software or any derivative of it for research with the final aim of
#   developing software products for sale or license to a third party or
#   (3) use of the Software or any derivative of it for research with the
#   final aim of developing non-software products for sale or license to a
#   third party, or (4) use of the Software to provide any service to an
#   external organisation for which payment is received. If you are
#   interested in using the Software commercially, please contact Isis
#   Innovation Limited ("Isis"), the technology transfer company of the
#   University, to negotiate a licence. Contact details are:
#   innovation@isis.ox.ac.uk quoting reference DE/1112.

Usage() {
    echo ""
    echo "Usage: standard_space_roi <input> <output> [options] [flirt options]"
    echo ""
    echo "-ssref <ref_image>  : standard space reference image to use (default $FSLDIR/etc/standard/avg152T1)"
    echo "-ssapply <image>    : alternative input image to apply the ROI to, instead of the one used to generate the ROI"
    echo "-ssd                : debug (don't delete intermediate files)"
    echo ""
    exit
}

if [ _$FSLDIR = _ ] ; then
    FSLDIR=/usr/local/fsl
    export FSLDIR
fi

[ _$2 = _ ] && Usage

in=`${FSLDIR}/bin/remove_ext $1`;
if [ `${FSLDIR}/bin/imtest $in` = 0 ] ; then
    echo "standard space reference image not valid"
    Usage
fi
shift

out=`${FSLDIR}/bin/remove_ext $1`;
shift

debug=0

standard=${FSLDIR}/etc/standard/avg152T1
inapply=$in

while [ _$1 != _ ] ; do

    if [ $1 = -ssd ] ; then
        debug=1
        shift

    elif [ $1 = -ssref ] ; then
	standard=$2
	shift 2

    elif [ $1 = -ssapply ] ; then
	inapply=$2
	shift 2
    fi

done

if [ `${FSLDIR}/bin/imtest $standard` = 0 ] ; then
    echo "standard space reference image not valid"
    Usage
fi

${FSLDIR}/bin/flirt -in $in -ref $standard -o ${out}_tmp_to_std -omat ${out}_tmp_to_std.mat $@

${FSLDIR}/bin/convert_xfm -inverse -omat ${out}_tmp_to_std_inv.mat ${out}_tmp_to_std.mat

X=`${FSLDIR}/bin/avwval $standard dim1` ; X=`echo "$X 1 - p" | dc -`
Y=`${FSLDIR}/bin/avwval $standard dim2` ; Y=`echo "$Y 1 - p" | dc -`
Z=`${FSLDIR}/bin/avwval $standard dim3` ; Z=`echo "$Z 1 - p" | dc -`

xmin=$X ; xmax=0; ymin=$Y ; ymax=0; zmin=$Z ; zmax=0; 
for c in "0 0 0" "$X 0 0" "0 $Y 0" "$X $Y 0" "0 0 $Z" "$X 0 $Z" "0 $Y $Z" "$X $Y $Z" ; do
    x=`echo $c | img2imgcoord -src $standard -dest $in -xfm ${out}_tmp_to_std_inv.mat -vox | grep -v voxels | awk '{print "0 k " $1 " 1 / p"}' | sed 's/-/_/g' | dc -`
    y=`echo $c | img2imgcoord -src $standard -dest $in -xfm ${out}_tmp_to_std_inv.mat -vox | grep -v voxels | awk '{print "0 k " $2 " 1 / p"}' | sed 's/-/_/g' | dc -`
    z=`echo $c | img2imgcoord -src $standard -dest $in -xfm ${out}_tmp_to_std_inv.mat -vox | grep -v voxels | awk '{print "0 k " $3 " 1 / p"}' | sed 's/-/_/g' | dc -`
    if [ $x -lt $xmin ] ; then xmin=$x ; fi
    if [ $x -gt $xmax ] ; then xmax=$x ; fi
    if [ $y -lt $ymin ] ; then ymin=$y ; fi
    if [ $y -gt $ymax ] ; then ymax=$y ; fi
    if [ $z -lt $zmin ] ; then zmin=$z ; fi
    if [ $z -gt $zmax ] ; then zmax=$z ; fi
done

X=`${FSLDIR}/bin/avwval $in dim1` ; X=`echo "$X 1 - p" | dc -`
Y=`${FSLDIR}/bin/avwval $in dim2` ; Y=`echo "$Y 1 - p" | dc -`
Z=`${FSLDIR}/bin/avwval $in dim3` ; Z=`echo "$Z 1 - p" | dc -`

if [ $xmin -lt 0 ] ; then xmin=0 ; fi
if [ $xmin -gt $X ] ; then xmin=$X ; fi
if [ $xmax -lt 0 ] ; then xmax=0 ; fi
if [ $xmax -gt $X ] ; then xmax=$X ; fi
if [ $ymin -lt 0 ] ; then ymin=0 ; fi
if [ $ymin -gt $Y ] ; then ymin=$Y ; fi
if [ $ymax -lt 0 ] ; then ymax=0 ; fi
if [ $ymax -gt $Y ] ; then ymax=$Y ; fi
if [ $zmin -lt 0 ] ; then zmin=0 ; fi
if [ $zmin -gt $Z ] ; then zmin=$Z ; fi
if [ $zmax -lt 0 ] ; then zmax=0 ; fi
if [ $zmax -gt $Z ] ; then zmax=$Z ; fi

xsize=`echo "1 $xmax + $xmin - p" | dc -`
ysize=`echo "1 $ymax + $ymin - p" | dc -`
zsize=`echo "1 $zmax + $zmin - p" | dc -`

${FSLDIR}/bin/avwroi $inapply $out $xmin $xsize $ymin $ysize $zmin $zsize

if [ $debug = 0 ] ; then
    /bin/rm ${out}_tmp*
fi

